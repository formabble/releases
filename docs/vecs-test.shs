@define(ml/embeddings/use-gpu false)
@include("../../shards/lib/ml/embeddings.shs" Once: true)

@ml/embeddings/prepare

@define(db "shards_vecs.db")
DB.LoadExtension("sqlite-vec" @db)
Msg("Loaded")

"Coding question" | Do(ml/embed) | Take(0) = coding-embedding
"General question" | Do(ml/embed) | Take(0) = general-embedding
"Game engine question" | Do(ml/embed) | Take(0) = game-engine-embedding

"How to render a 3d model?" | Log("QUERY")
Do(ml/embed) | Take(0) = query-embedding
[(query-embedding | Tensor.ToFloats)]
Pack("f32[384]") = query-embedding-packed

[query-embedding coding-embedding] | Do(ml/cosine-similarity) | Log("Coding similarity")
[query-embedding general-embedding] | Do(ml/cosine-similarity) | Log("General similarity")
[query-embedding game-engine-embedding] | Do(ml/cosine-similarity) | Log("Game engine similarity")

Msg("Embedding done")

[query-embedding-packed] | DB.Query("""
with matches as (
  select
    rowid,
    distance
  from vec_docs
  where shard_doc_embeddings match ?
  order by distance
  limit 10
)
select
  shard_doc,
  distance
from matches
left join docs on docs.rowid = matches.rowid
""" @db AsRows: true) | ForEach(Log)
